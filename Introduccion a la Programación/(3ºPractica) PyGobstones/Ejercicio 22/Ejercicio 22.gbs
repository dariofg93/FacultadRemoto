procedure IrAlExtremo(d)
{
 while(puedeMover(d))
 { Mover(d) }
}

procedure MoverN(n,d)
{
 repeatWith i in 1..n
 {
  Mover(d)
 }
}

function cero()
{
 return(nroBolitas(Negro)==0)
}

procedure SacarN(n,c)
//Proposito: Saca bolitas de color(c) tantas veces como (n) lo diga.
//Precondicion: Deben haber la cantidad de bolitas que se desea sacar del ese color.
{
 repeatWith i in 1..n
 {
  Sacar(c)
 }
}

procedure SacarTodas(c)
{
 repeatWith i in 1..(nroBolitas(c))
 {
  SacarN((nroBolitas(c)),c)
 }
}

procedure LimpiarCelda()
//Proposito: Saca todas las bolitas de la celda actual.
{
 repeatWith c in minColor()..minColor()
 {
  SacarTodas(c)
 }
}

procedure IrASiguienteCelda()
//Va a la sig. celda en un recorrido del tablero
//``primero al Norte y luego al Este''.
//Precondicion: not esUltimaCelda()
{
 if(puedeMover(Norte))
 {
  Mover(Norte)
 }
 else
 {
  Mover(Este)
  IrAlExtremo(Sur)
 }
}

function esUltimaCelda()
//Indica si la celda actual es la ultima en un recorrido del tablero
//que primero va hacia el norte y luego hacia el este.
//Precondicion: no tiene.
{
 return(not puedeMover(Norte) && not puedeMover(Este))
}

procedure LimpiarTableroBis()
//Proposito: Deja el tablero en Blanco.
//Precondicion: no tiene.
{
 while(not esUltimaCelda())
 {
  LimpiarCelda()
  IrASiguienteCelda()
 }
 LimpiarCelda()
}

procedure Main()
{
 IrAlOrigen()
 LimpiarTableroBis()
}

