Object subclass: #Pasajero	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'practica 2: Ejercicio 1'!!Pasajero commentStamp: '<historical>' prior: 0!!!Pasajero methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 19:37'!quiereSubirA: unMicro	self subclassResponsibility ! !Pasajero subclass: #PasajeroObsecuente	instanceVariableNames: 'jefe'	classVariableNames: ''	poolDictionaries: ''	category: 'practica 2: Ejercicio 1'!!PasajeroObsecuente commentStamp: '<historical>' prior: 0!!!PasajeroObsecuente methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 22:28'!quiereSubirA: unMicro		^jefe quiereSubirA: unMicro.! !!PasajeroObsecuente methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 21:54'!darJefe: unJefe	jefe:= unJefe.! !Pasajero subclass: #PasajeroApurado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'practica 2: Ejercicio 1'!!PasajeroApurado commentStamp: '<historical>' prior: 0!!!PasajeroApurado methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:16'!quiereSubirA: unMicro	^unMicro hayLugar ! !Pasajero subclass: #PasajeroClaustrofobico	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'practica 2: Ejercicio 1'!!PasajeroClaustrofobico commentStamp: '<historical>' prior: 0!!!PasajeroClaustrofobico methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:16'!quiereSubirA: unMicro	^unMicro hayLugar and: [ unMicro volumen > 120 "cm3" ]! !Pasajero subclass: #PasajeroModerado	instanceVariableNames: 'xCantidadDeLugaresQuePretendeMinimo'	classVariableNames: ''	poolDictionaries: ''	category: 'practica 2: Ejercicio 1'!!PasajeroModerado commentStamp: '<historical>' prior: 0!!!PasajeroModerado methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 22:31'!quiereSubirA: unMicro		^unMicro cuantosLugaresHay > xCantidadDeLugaresQuePretendeMinimo ! !Object subclass: #Micro	instanceVariableNames: 'volumenMicro asientosVacios lugaresParadosDisponibles lugarTotal'	classVariableNames: ''	poolDictionaries: ''	category: 'practica 2: Ejercicio 1'!!Micro commentStamp: '<historical>' prior: 0!!!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 19:54'!puedeSubir: unaPersona	^self hayLugar and: [unaPersona quiereSubirA: self]! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:15'!inicializarVolumen: unVolumen	volumenMicro:= unVolumen! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:44'!subirPasajeroSentado		asientosVacios:= asientosVacios - 1.	lugarTotal:= lugarTotal - 1.! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:38'!inicializarLugaresParados: unaCantidad	lugaresParadosDisponibles:= unaCantidad! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:28'!hayAsiento^asientosVacios>0! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:33'!subir: unPasajero	self hayAsiento ifTrue: [ self subirPasajeroSentado ]					ifFalse: [ self subirPasajeroParado  ]! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:14'!volumen	^volumenMicro ! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 21:30'!bajar: unPasajero  "entregas.obj1@gmail.com"	self hayAsientoLLenos ifTrue: [ self bajarPasajeroSentado ]							ifFalse: [ self bajarPasajeroParado ]! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 21:11'!bajarPasajeroSentado	asientosVacios := asientosVacios + 1.	lugarTotal:= lugarTotal +1.! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:38'!inicializarAsientos: unaCantidad	asientosVacios:= unaCantidad! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:39'!hayLugarParaIrParado	^lugaresParadosDisponibles > 0! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:41'!hayLugar	^lugarTotal > 0! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 21:28'!hayLugarParadosTotales	^lugaresParadosDisponibles ! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:42'!subirPasajeroParado		lugaresParadosDisponibles:= lugaresParadosDisponibles - 1.	lugarTotal:= lugarTotal - 1! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 19:18'!totalDeAsientos		^30 "asientos"! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 22:04'!inicializarLugarTotal: unaCantidad	lugarTotal:= unaCantidad! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 21:10'!bajarPasajeroParado	lugaresParadosDisponibles:= lugaresParadosDisponibles + 1.	lugarTotal:= lugarTotal +1.! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 19:19'!totalDeLugaresParados		^10! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 22:31'!cuantosLugaresHay	^lugarTotal ! !!Micro methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 21:29'!hayAsientoLLenos	^(self hayAsiento) or: [ self hayLugarParadosTotales=0 and: [ self hayAsiento ] ]  ! !Pasajero subclass: #PasajeroFiaca	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'practica 2: Ejercicio 1'!!PasajeroFiaca commentStamp: '<historical>' prior: 0!!!PasajeroFiaca methodsFor: 'as yet unclassified' stamp: 'dario 9/25/2014 20:16'!quiereSubirA: unMicro	^unMicro hayAsiento 	! !