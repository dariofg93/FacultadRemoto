Object subclass: #Ciber	instanceVariableNames: 'computadoras pedidos'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!Ciber commentStamp: 'NG 12/2/2014 23:44' prior: 0!Represento a un ciber, el cual administra computadoras con sus respectivos programas y gestiona pedidos.!!Ciber methodsFor: 'computadoras' stamp: 'NG 12/2/2014 23:57'!marcasDeMotherboards	^ computadoras collect: [ :each | each marcaDeMotherboard ]! !!Ciber methodsFor: 'computadoras' stamp: 'NG 12/2/2014 23:53'!computadoraQueTieneInstalado: unPrograma 	^ computadoras		detect: [ :each | each tieneInstalado: unPrograma ]		ifNone: [ nil ]! !!Ciber methodsFor: 'computadoras' stamp: 'NG 12/3/2014 00:00'!espacioTotalEnDisco	^ computadoras sum: [ :each | each espacioLibre ] ifEmpty: [ 0 gb ]! !!Ciber methodsFor: 'computadoras' stamp: 'NG 12/2/2014 06:28'!tieneComputadora: unaComputadora	^ computadoras includes: unaComputadora! !!Ciber methodsFor: 'computadoras' stamp: 'NG 12/3/2014 00:18'!computadorasCopadas	^ computadoras select: [ :each | each esCopada ]! !!Ciber methodsFor: 'computadoras' stamp: 'NG 12/2/2014 06:39'!computadorasConEspacioLibre: unaCapacidad	^ computadoras select: [ :each | each tieneEspacioLibre: unaCapacidad ]! !!Ciber methodsFor: 'computadoras' stamp: 'NG 12/2/2014 06:28'!agregarComputadora: unaComputadora	computadoras add: unaComputadora! !!Ciber methodsFor: 'computadoras' stamp: 'NG 12/3/2014 08:44'!computadorasQueSatisfacen: unPedido 	^ computadoras select: [ :each | each satisface: unPedido ]! !!Ciber methodsFor: 'inicializacion' stamp: 'NG 12/3/2014 10:18'!initialize	computadoras := Set new.	pedidos := OrderedCollection new! !!Ciber methodsFor: 'pedidos' stamp: 'NG 12/3/2014 11:01'!pedidosRechazados	^ pedidos select: [ :each | each estaRechazado ]! !!Ciber methodsFor: 'pedidos' stamp: 'NG 12/3/2014 10:19'!ingresarPedido: unPedido	pedidos add: unPedido! !!Ciber methodsFor: 'pedidos' stamp: 'NG 12/3/2014 10:35'!primerPedidoPendiente	"PRECONDICION: asume que existe al menos un pedido pendiente"	^ self pedidosPendientes first! !!Ciber methodsFor: 'pedidos' stamp: 'NG 12/3/2014 10:37'!atenderPrimerPedido	computadoras		detect: [ :each | each satisface: self primerPedidoPendiente ]		ifFound: [ :compu | self primerPedidoPendiente despacharCon: compu ]		ifNone: [ self primerPedidoPendiente rechazar ]! !!Ciber methodsFor: 'pedidos' stamp: 'NG 12/3/2014 10:19'!pedidosPendientes	^ pedidos select: [ :each | each estaPendiente ]! !!Ciber methodsFor: 'consultas' stamp: 'NG 12/3/2014 11:03'!programasEnPedidosRechazados	^ (self pedidosRechazados flatCollect: [ :each | each programas difference: self todosLosProgramas ]) asSet! !!Ciber methodsFor: 'consultas' stamp: 'NG 12/3/2014 11:01'!todosLosProgramas	^ (computadoras flatCollect: [ :each | each programasInstalados ]) asSet! !Object subclass: #Disco	instanceVariableNames: 'capacidad espacioLibre'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!Disco commentStamp: 'NG 12/2/2014 23:34' prior: 0!Represento a un disco rígido de una computadora, el cual posee una capacidad inicial (medida en Gb) que se va decrementando a medida que se ocupa.!!Disco methodsFor: 'inicializacion' stamp: 'NG 12/2/2014 22:36'!inicializarCapacidad: unaCapacidad	capacidad := unaCapacidad.	espacioLibre := capacidad.! !!Disco methodsFor: 'capacidad' stamp: 'NG 12/2/2014 22:36'!espacioLibre	^ espacioLibre! !!Disco methodsFor: 'capacidad' stamp: 'NG 12/2/2014 22:35'!ocupar: unaCantidad	espacioLibre := espacioLibre - unaCantidad! !!Disco methodsFor: 'capacidad' stamp: 'NG 12/2/2014 06:45'!capacidad	^ capacidad! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Disco class	instanceVariableNames: ''!!Disco class commentStamp: '<historical>' prior: 0!!!Disco class methodsFor: 'creacion de instancias' stamp: 'NG 12/2/2014 06:36'!deCapacidad: unaCapacidad	^ self new inicializarCapacidad: unaCapacidad! !Magnitude subclass: #Gigabyte	instanceVariableNames: 'valor'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!Gigabyte commentStamp: 'NG 12/2/2014 23:22' prior: 0!Represento una unidad de medida de almacenamiento digital, el Gigabyte. Como toda unidad de medida, puedo ser comparado y respondo operaciones aritméticas básicas.!!Gigabyte methodsFor: 'private' stamp: 'NG 12/2/2014 22:42'!valor	^ valor! !!Gigabyte methodsFor: 'private' stamp: 'NG 12/2/2014 22:42'!hash	^ valor hash! !!Gigabyte methodsFor: 'inicializacion' stamp: 'NG 12/2/2014 22:44'!inicializarValor: unValor	valor := unValor! !!Gigabyte methodsFor: 'operaciones aritmeticas' stamp: 'NG 12/2/2014 22:44'!- unosGigabytes	^ (valor - unosGigabytes valor) gb! !!Gigabyte methodsFor: 'operaciones aritmeticas' stamp: 'NG 12/2/2014 22:45'!+ unosGigabytes	^ (valor + unosGigabytes valor) gb! !!Gigabyte methodsFor: 'comparaciones' stamp: 'NG 12/2/2014 22:42'!= otrosGigabytes	^ valor = otrosGigabytes valor! !!Gigabyte methodsFor: 'comparaciones' stamp: 'NG 12/2/2014 22:42'!< otrosGigabytes	^ valor < otrosGigabytes valor! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Gigabyte class	instanceVariableNames: ''!!Gigabyte class commentStamp: '<historical>' prior: 0!!!Gigabyte class methodsFor: 'instance creation' stamp: 'NG 12/2/2014 22:43'!conValor: unValor	^ self new inicializarValor: unValor! !Object subclass: #Motherboard	instanceVariableNames: 'marca'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!Motherboard commentStamp: 'NG 12/2/2014 23:20' prior: 0!Represento a la placa madre de una computadora. De la misma sólo podemos conocer su marca.!!Motherboard methodsFor: 'marca' stamp: 'NG 12/2/2014 22:54'!esDeMarca: unNombreDeMarca	^ marca = unNombreDeMarca! !!Motherboard methodsFor: 'marca' stamp: 'NG 12/2/2014 23:57'!marca	^ marca! !!Motherboard methodsFor: 'inicializacion' stamp: 'NG 12/2/2014 22:53'!inicializarMarca: unNombreDeMarca	marca := unNombreDeMarca! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Motherboard class	instanceVariableNames: ''!!Motherboard class commentStamp: '<historical>' prior: 0!!!Motherboard class methodsFor: 'creacion de instancias' stamp: 'NG 12/2/2014 22:52'!deMarca: unNombreDeMarca	^ self new inicializarMarca: unNombreDeMarca! !Object subclass: #Computadora	instanceVariableNames: 'disco motherboard programasInstalados'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!Computadora commentStamp: 'NG 12/2/2014 23:35' prior: 0!Represento a una computadora de un ciber, la cual posee un disco rígido, un mother y una colección de programas que fueron instalados en ella.!!Computadora methodsFor: 'motherboard' stamp: 'NG 12/2/2014 23:56'!marcaDeMotherboard	^ motherboard marca! !!Computadora methodsFor: 'inicializacion' stamp: 'NG 12/2/2014 22:57'!inicializarDisco: unDisco yMotherboard: unMotherboard	disco := unDisco.	motherboard := unMotherboard.	programasInstalados := OrderedCollection new! !!Computadora methodsFor: 'capacidad' stamp: 'NG 12/2/2014 23:03'!espacioLibre	^ disco espacioLibre! !!Computadora methodsFor: 'capacidad' stamp: 'NG 12/3/2014 09:20'!tieneEspacioLibre: unaCapacidad	^ self espacioLibre >= unaCapacidad! !!Computadora methodsFor: 'programas' stamp: 'NG 12/3/2014 08:48'!tieneInstalados: unaColeccionDeProgramas	"retorna true si la computadora tiene instalados todos los programas de una lista"		^ unaColeccionDeProgramas allSatisfy: [ :each | self tieneInstalado: each ]! !!Computadora methodsFor: 'programas' stamp: 'NG 12/3/2014 08:57'!instalar: unPrograma	"instalar un programa implica agregarlo a la colección de programas instalados y ocupar el espacio necesario en el disco"	programasInstalados add: unPrograma.	disco ocupar: unPrograma espacioRequerido! !!Computadora methodsFor: 'programas' stamp: 'NG 12/2/2014 23:00'!tieneInstalado: unPrograma	^ programasInstalados includes: unPrograma! !!Computadora methodsFor: 'programas' stamp: 'NG 12/3/2014 00:14'!cantidadDeProgramasInstalados	^ programasInstalados size! !!Computadora methodsFor: 'programas' stamp: 'NG 12/2/2014 22:57'!programasInstalados	^ programasInstalados! !!Computadora methodsFor: 'consultas' stamp: 'NG 12/3/2014 00:15'!esCopada	^ self cantidadDeProgramasInstalados >= 5 and: [ motherboard esDeMarca: 'Asus' ]! !!Computadora methodsFor: 'pedidos' stamp: 'NG 12/3/2014 08:52'!satisface: unPedido 	^ (self tieneInstalados: unPedido programas)		and: [ self tieneEspacioLibre: unPedido espacioEnDiscoRequerido ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Computadora class	instanceVariableNames: ''!!Computadora class commentStamp: '<historical>' prior: 0!!!Computadora class methodsFor: 'creacion de instancias' stamp: 'NG 12/2/2014 22:49'!conDisco: unDisco yMotherboard: unMotherboard	^ self new inicializarDisco: unDisco yMotherboard: unMotherboard! !Object subclass: #Programa	instanceVariableNames: 'nombre espacioRequerido'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!Programa commentStamp: 'NG 12/2/2014 23:20' prior: 0!Represento a un programa que puede instalarse en una computadora. Además de tener un nombre, sé cuánto espacio (medido en Gb) requiero para ser instalado.!!Programa methodsFor: 'inicializacion' stamp: 'NG 12/2/2014 23:03'!inicializarNombre: unNombre espacioRequerido: unaCapacidad	nombre := unNombre.	espacioRequerido := unaCapacidad! !!Programa methodsFor: 'espacio en disco' stamp: 'NG 12/2/2014 23:05'!espacioRequerido	^ espacioRequerido! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Programa class	instanceVariableNames: ''!!Programa class commentStamp: '<historical>' prior: 0!!!Programa class methodsFor: 'creacion de instancias' stamp: 'NG 12/2/2014 23:02'!llamado: unNombre conEspacioRequerido: unaCapacidad 	^ self new inicializarNombre: unNombre espacioRequerido: unaCapacidad! !Object subclass: #Pedido	instanceVariableNames: 'programas estado'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!Pedido commentStamp: 'NG 12/3/2014 08:58' prior: 0!Represento un pedido que se puede realizar a un ciber, en el cual se indican los programas que se requiere que estén instalados para que se considere satisfecho.!!Pedido methodsFor: 'inicializacion' stamp: 'NG 12/3/2014 10:25'!inicializarProgramas: unaColeccionDeProgramas	programas := Set withAll: unaColeccionDeProgramas.	estado := Pendiente new.! !!Pedido methodsFor: 'espacio en disco' stamp: 'NG 12/3/2014 08:56'!espacioEnDiscoRequerido	^ programas sum: [ :each | each espacioRequerido ] ifEmpty: [ 0 gb ]! !!Pedido methodsFor: 'estado' stamp: 'NG 12/3/2014 10:37'!rechazar	estado := Rechazado new! !!Pedido methodsFor: 'estado' stamp: 'NG 12/3/2014 10:39'!estaRechazado	^ estado estaRechazado! !!Pedido methodsFor: 'estado' stamp: 'NG 12/3/2014 10:25'!estaPendiente	^ estado estaPendiente! !!Pedido methodsFor: 'estado' stamp: 'NG 12/3/2014 10:27'!computadoraAsignada	^ estado computadoraAsignada! !!Pedido methodsFor: 'estado' stamp: 'NG 12/3/2014 10:26'!despacharCon: unaComputadora 	estado := Despachado conComputadoraAsignada: unaComputadora! !!Pedido methodsFor: 'estado' stamp: 'NG 12/3/2014 10:39'!estaDespachado	^ estado estaDespachado! !!Pedido methodsFor: 'programas' stamp: 'NG 12/3/2014 08:47'!programas	^ programas! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pedido class	instanceVariableNames: ''!!Pedido class commentStamp: '<historical>' prior: 0!!!Pedido class methodsFor: 'creacion de instancias' stamp: 'NG 12/3/2014 08:40'!conProgramas: unaColeccionDeProgramas	^ self new inicializarProgramas: unaColeccionDeProgramas! !Object subclass: #EstadoDePedido	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!EstadoDePedido commentStamp: '<historical>' prior: 0!!!EstadoDePedido methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:29'!estaPendiente	self subclassResponsibility! !!EstadoDePedido methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:29'!estaDespachado	self subclassResponsibility! !!EstadoDePedido methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:30'!computadoraAsignada	self subclassResponsibility! !!EstadoDePedido methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:39'!estaRechazado	self subclassResponsibility! !EstadoDePedido subclass: #Pendiente	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!Pendiente commentStamp: '<historical>' prior: 0!!!Pendiente methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:25'!estaPendiente	^ true! !!Pendiente methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:29'!estaDespachado	^ false! !!Pendiente methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:31'!computadoraAsignada	self error: 'un pedido pendiente no posee una computadora asignada'! !!Pendiente methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:40'!estaRechazado	^ false! !EstadoDePedido subclass: #Rechazado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!Rechazado commentStamp: '<historical>' prior: 0!!!Rechazado methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:38'!estaPendiente	^ false! !!Rechazado methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:38'!estaDespachado	^ false! !!Rechazado methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:38'!computadoraAsignada	self error: 'un pedido rechazado no posee una computadora asignada'! !!Rechazado methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:39'!estaRechazado	^ true! !EstadoDePedido subclass: #Despachado	instanceVariableNames: 'computadoraAsignada'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber'!!Despachado commentStamp: '<historical>' prior: 0!!!Despachado methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:27'!estaPendiente	^ false! !!Despachado methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:30'!estaDespachado	^ true! !!Despachado methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:40'!estaRechazado	^ false! !!Despachado methodsFor: 'inicializacion' stamp: 'NG 12/3/2014 10:27'!inicializarComputadoraAsignada: unaComputadora 	computadoraAsignada := unaComputadora! !!Despachado methodsFor: 'asignacion' stamp: 'NG 12/3/2014 10:28'!computadoraAsignada	^ computadoraAsignada! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Despachado class	instanceVariableNames: ''!!Despachado class commentStamp: '<historical>' prior: 0!!!Despachado class methodsFor: 'creacion de instancias' stamp: 'NG 12/3/2014 10:27'!conComputadoraAsignada: unaComputadora 	^ self new inicializarComputadoraAsignada: unaComputadora! !'From Pharo3.0 of 18 March 2013 [Latest update: #30859] on 3 December 2014 at 11:04:09.466448 am'!!Number methodsFor: '*Practica3-Ejercicio5-Ciber' stamp: 'NG 12/2/2014 22:43'!gb	^ Gigabyte conValor: self! !'From Pharo3.0 of 18 March 2013 [Latest update: #30859] on 3 December 2014 at 11:04:09.468448 am'!!Collection methodsFor: '*Practica3-Ejercicio5-Ciber' stamp: 'NG 12/3/2014 00:01'!sum: aBlock ifEmpty: emptyBlock	^ self		ifEmpty: emptyBlock		ifNotEmpty: [ self sum: aBlock ]! !