TestCase subclass: #PedidoTest	instanceVariableNames: 'pedido windows7 word chrome compu'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber-Tests'!!PedidoTest commentStamp: '<historical>' prior: 0!!!PedidoTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:24'!test03UnPedidoPuedeDespacharseConUnaComputadoraAsignada	pedido despacharCon: compu.	self assert: pedido estaDespachado.	self deny: pedido estaPendiente.	self assert: pedido computadoraAsignada equals: compu! !!PedidoTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:22'!test01ElEspacioEnDiscoRequeridoDeUnPedidoEsLaSumaDeLosEspaciosDeLosProgramas	self assert: pedido espacioEnDiscoRequerido equals: 6.5 gb! !!PedidoTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:28'!test04NoPodemosPedirleLaComputadoraAsignadaAUnPedidoPendiente	self should: [ pedido computadoraAsignada ] raise: Error! !!PedidoTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:22'!test02UnPedidoRecienCreadoEstaPendiente	self assert: pedido estaPendiente! !!PedidoTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:24'!setUp	windows7 := Programa llamado: 'Windows 7' conEspacioRequerido: 5 gb.	word := Programa llamado: 'Microsoft Word' conEspacioRequerido: 1 gb.	chrome := Programa llamado: 'Google Chrome' conEspacioRequerido: 0.5 gb.	compu := Computadora conDisco: (Disco deCapacidad: 10 gb) yMotherboard: (Motherboard deMarca: 'Gigabyte').	pedido := Pedido conProgramas: (Set with: windows7 with: word with: chrome)! !TestCase subclass: #ComputadoraTest	instanceVariableNames: 'compu photoshop compuIntel compuAsus word pharo3 autocad firefox windows8'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber-Tests'!!ComputadoraTest commentStamp: '<historical>' prior: 0!!!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:09'!test01UnaComputadoraConDiscoDe100GBNoTiene105GBLibres	self deny: (compuIntel tieneEspacioLibre: 105 gb)! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:10'!test04PodemosInstalarUnProgramaEnUnaComputadora	compuAsus instalar: photoshop.	self assert: compuAsus programasInstalados size equals: 1.	self assert: (compuAsus tieneInstalado: photoshop)! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:10'!setUp	compuIntel := Computadora conDisco: (Disco deCapacidad: 100 gb) yMotherboard: (Motherboard deMarca: 'Intel').	compuAsus := Computadora conDisco: (Disco deCapacidad: 500 gb) yMotherboard: (Motherboard deMarca: 'Asus').	photoshop := Programa llamado: 'Photoshop' conEspacioRequerido: 5 gb.	word := Programa llamado: 'Microsoft Word' conEspacioRequerido: 2 gb.	pharo3 := Programa llamado: 'Pharo 3' conEspacioRequerido: 0.03 gb.	autocad := Programa llamado: 'AutoCad' conEspacioRequerido: 12 gb.	firefox := Programa llamado: 'Firefox' conEspacioRequerido: 0.5 gb! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:15'!test09UnaCompuNoEsCopadaSiSuMotherNoEsAsus	compuIntel		instalar: pharo3;		instalar: photoshop;		instalar: word;		instalar: autocad;		instalar: firefox.	self deny: compuIntel esCopada! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 08:49'!test11UnaCompuNoSatisfaceUnPedidoSiNoTieneTodosLosProgramasRequeridos	| pedido |	compuIntel	instalar: pharo3.	pedido := Pedido conProgramas: (Set with: pharo3 with: word).	self deny: (compuIntel satisface: pedido)! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:11'!test06UnaCompuNosDiceLaMarcaDeSuMotherboard	self		assert: compuIntel marcaDeMotherboard equals: 'Intel';		assert: compuAsus marcaDeMotherboard equals: 'Asus'! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 08:50'!test12UnaCompuNoSatisfaceUnPedidoSiNoTieneElEspacioEnDiscoRequerido	| pedido |	windows8 := Programa llamado: 'Windows 8' conEspacioRequerido: 110 gb.	compuIntel	instalar: windows8.	pedido := Pedido conProgramas: (Set with: windows8).	self deny: (compuIntel satisface: pedido)! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:10'!test05InstalarUnProgramaEnUnaComputadoraOcupaElEspacioEnDiscoQueRequiere	self assert: compuIntel espacioLibre equals: 100 gb.	compuIntel instalar: photoshop.	self assert: compuIntel espacioLibre equals: 95 gb! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:12'!test08UnaCompuNoEsCopadaSiTieneMenosDe5Programas	compuAsus		instalar: pharo3;		instalar: photoshop.	self deny: compuAsus esCopada! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 08:46'!test10UnaCompuSatisfaceUnPedidoSiTieneTodosLosProgramasYElEspacioEnDiscoRequerido	| pedido |	compuIntel		instalar: pharo3;		instalar: photoshop;		instalar: word.	pedido := Pedido conProgramas: (Set with: pharo3 with: word).	self assert: (compuIntel satisface: pedido)! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:10'!test03UnaComputadoraRecienCreadaNoTieneProgramasInstalados	self assert: compuIntel programasInstalados isEmpty! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:12'!test07UnaCompuEsCopadaSiTieneAlMenos5ProgramasYSuMotherEsAsus	compuAsus		instalar: pharo3;		instalar: photoshop;		instalar: word;		instalar: autocad;		instalar: firefox.	self assert: compuAsus esCopada! !!ComputadoraTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:09'!test02UnaComputadoraConDiscoDe100GBTiene90GBLibres	self assert: (compuIntel tieneEspacioLibre: 90 gb)! !TestCase subclass: #CiberTest	instanceVariableNames: 'ciber unaCompuCualquiera word photoshop otraCompu pharo3 autocad firefox'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber-Tests'!!CiberTest commentStamp: '<historical>' prior: 0!!!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 22:47'!test03ElCiberNoTieneComputadorasConEspacioLibreX	self assert: (ciber computadorasConEspacioLibre: 10 gb) isEmpty! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:18'!test10ElCiberRetornaUnaColeccionConLasComputadorasCopadas	unaCompuCualquiera		instalar: firefox;		instalar: pharo3;		instalar: word;		instalar: photoshop;		instalar: autocad.	ciber		agregarComputadora: unaCompuCualquiera;		agregarComputadora: otraCompu.	self assert: ciber computadorasCopadas size equals: 1.	self assert: (ciber computadorasCopadas includes: unaCompuCualquiera)! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:16'!setUp	ciber := Ciber new.	unaCompuCualquiera := Computadora		conDisco: (Disco deCapacidad: 100 gb)		yMotherboard: (Motherboard deMarca: 'Asus').	otraCompu := Computadora		conDisco: (Disco deCapacidad: 360 gb)		yMotherboard: (Motherboard deMarca: 'Intel').	photoshop := Programa llamado: 'Photoshop' conEspacioRequerido: 5 gb.	word := Programa llamado: 'Microsoft Word' conEspacioRequerido: 2 gb.	pharo3 := Programa llamado: 'Pharo 3' conEspacioRequerido: 0.03 gb.	autocad := Programa llamado: 'AutoCad' conEspacioRequerido: 12 gb.	firefox := Programa llamado: 'Firefox' conEspacioRequerido: 0.5 gb! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 09:28'!test13ElCiberIngresaPedidosPorOrdenDeLlegada	| primerPedido segundoPedido |	primerPedido := Pedido conProgramas: (Set with: photoshop with: firefox).	segundoPedido := Pedido conProgramas: (Set with: pharo3).	ciber		ingresarPedido: primerPedido;		ingresarPedido: segundoPedido.	self assert: ciber pedidosPendientes size equals: 2.	self assert: ciber pedidosPendientes first equals: primerPedido.	self assert: ciber pedidosPendientes second equals: segundoPedido! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 22:40'!test01AgregarUnaCompuAlCiber	ciber agregarComputadora: unaCompuCualquiera.	self assert: (ciber tieneComputadora: unaCompuCualquiera)! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 00:02'!test09ElEspacioTotalEnDiscoDeUnCiberSinComputadorasEs0GB	self assert: ciber espacioTotalEnDisco equals: 0 gb! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 23:52'!test06ElCiberRetornaNilSiNoHayComputadorasConUnProgramaInstalado	unaCompuCualquiera instalar: word.	ciber agregarComputadora: unaCompuCualquiera.	self assert: (ciber computadoraQueTieneInstalado: photoshop) isNil! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 08:43'!test11ElCiberRetornaUnaColeccionConLasComputadorasQueSatisfacenUnPedido	| pedido computadorasQueSatisfacenPedido |	unaCompuCualquiera		instalar: firefox;		instalar: photoshop;		instalar: word.	otraCompu		instalar: photoshop;		instalar: pharo3.	ciber		agregarComputadora: unaCompuCualquiera;		agregarComputadora: otraCompu.	pedido := Pedido conProgramas: (Set with: photoshop with: firefox).	computadorasQueSatisfacenPedido := ciber computadorasQueSatisfacen: pedido.	self assert: computadorasQueSatisfacenPedido size equals: 1.	self assert: (computadorasQueSatisfacenPedido includes: unaCompuCualquiera)! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:21'!test14ElCiberAtiendeUnPedidoAsignaComputadoraYLoDespacha	| pedido |	pedido := Pedido conProgramas: (Set with: photoshop with: firefox).	unaCompuCualquiera instalar: photoshop; instalar: firefox.	ciber agregarComputadora: unaCompuCualquiera.	ciber ingresarPedido: pedido.	ciber atenderPrimerPedido.	self assert: ciber pedidosPendientes isEmpty.	self deny: pedido estaPendiente.	self assert: pedido estaDespachado.	self assert: pedido computadoraAsignada equals: unaCompuCualquiera! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 22:40'!test02ElCiberNoTieneUnaComputadoraQueNoSeAgrego	self deny: (ciber tieneComputadora: unaCompuCualquiera)! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:58'!test16ElCiberRespondeLosProgramasQueEstanEnAlgunPedidoRechazadoyNoEnLasCompus	| pedido1 pedido2 programasEnPedidosRechazados |	pedido1 := Pedido conProgramas: (Set with: photoshop with: firefox).	pedido2 := Pedido conProgramas: (Set with: word with: autocad).	otraCompu instalar: word.	unaCompuCualquiera instalar: photoshop.	ciber		agregarComputadora: unaCompuCualquiera;		agregarComputadora: otraCompu.	ciber		ingresarPedido: pedido1;		ingresarPedido: pedido2.	ciber		atenderPrimerPedido;		atenderPrimerPedido.	programasEnPedidosRechazados := ciber programasEnPedidosRechazados.	self assert: programasEnPedidosRechazados size equals: 2.	self assert: (programasEnPedidosRechazados includes: firefox).	self assert: (programasEnPedidosRechazados includes: autocad)! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 22:50'!test04ElCiberTieneComputadorasConEspacioLibreX	| compuCon10GB compuCon20GB compuCon100GB compusConMasDe15GB |	compuCon10GB := Computadora conDisco: (Disco deCapacidad: 10 gb) yMotherboard: (Motherboard deMarca: 'Asus').	compuCon20GB := Computadora conDisco: (Disco deCapacidad: 20 gb) yMotherboard: (Motherboard deMarca: 'Intel').	compuCon100GB := Computadora conDisco: (Disco deCapacidad: 100 gb) yMotherboard: (Motherboard deMarca: 'Gigabyte').	ciber		agregarComputadora: compuCon10GB;		agregarComputadora: compuCon20GB;		agregarComputadora: compuCon100GB.	compusConMasDe15GB := ciber computadorasConEspacioLibre: 15 gb.	self assert: compusConMasDe15GB size equals: 2.	self assert: (compusConMasDe15GB includes: compuCon20GB).	self assert: (compusConMasDe15GB includes: compuCon100GB)! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:19'!test12ElCiberIngresaUnPedidoYQuedaComoPendiente	| pedido |	pedido := Pedido conProgramas: (Set with: photoshop with: firefox).	ciber ingresarPedido: pedido.	self assert: ciber pedidosPendientes size equals: 1.	self assert: pedido estaPendiente! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 23:50'!test05ElCiberRetornaLaCompuConUnProgramaInstalado	unaCompuCualquiera instalar: word.	otraCompu instalar: photoshop.	ciber		agregarComputadora: unaCompuCualquiera;		agregarComputadora: otraCompu.	self assert: (ciber computadoraQueTieneInstalado: word) equals: unaCompuCualquiera.	self assert: (ciber computadoraQueTieneInstalado: photoshop) equals: otraCompu! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 23:55'!test07ElCiberRetornaLasMarcasDeTodosLosMotherboards	ciber		agregarComputadora: unaCompuCualquiera;		agregarComputadora: otraCompu.	self assert: ciber marcasDeMotherboards equals: (Set with: 'Asus' with: 'Intel')! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/3/2014 10:36'!test15ElCiberAtiendeUnPedidoYLoRechazaPorqueNoEsSatisfecho	| pedido |	pedido := Pedido conProgramas: (Set with: photoshop with: firefox).	ciber ingresarPedido: pedido.	ciber atenderPrimerPedido.	self assert: ciber pedidosPendientes isEmpty.	self deny: pedido estaPendiente.	self deny: pedido estaDespachado.	self assert: pedido estaRechazado! !!CiberTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 23:59'!test08ElCiberRetornaElEspacioTotalEnDiscoDeLasComputadoras	unaCompuCualquiera instalar: photoshop.	otraCompu instalar: word.	ciber		agregarComputadora: unaCompuCualquiera;		agregarComputadora: otraCompu.	self assert: ciber espacioTotalEnDisco equals: 453 gb "100 + 360 - 5 - 2"! !TestCase subclass: #DiscoTest	instanceVariableNames: 'disco'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber-Tests'!!DiscoTest commentStamp: '<historical>' prior: 0!!!DiscoTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 22:43'!test01UnDiscoTieneTodaLaCapacidadSinOcupar	self assert: disco capacidad equals: 160 gb! !!DiscoTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 22:40'!setUp	disco := Disco deCapacidad: 160 gb! !!DiscoTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 22:44'!test02ElEspacioLibreDeUnDiscoVaDisminuyendoAMedidaQueSeOcupa	disco ocupar: 20 gb.	self assert: disco espacioLibre equals: 140 gb! !TestCase subclass: #MotherboardTest	instanceVariableNames: 'mother'	classVariableNames: ''	poolDictionaries: ''	category: 'Practica3-Ejercicio5-Ciber-Tests'!!MotherboardTest commentStamp: '<historical>' prior: 0!!!MotherboardTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 22:55'!test01UnMotherEsDeUnaCiertaMarca	self assert: (mother esDeMarca: 'Intel')! !!MotherboardTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 22:55'!setUp	mother := Motherboard deMarca: 'Intel'! !!MotherboardTest methodsFor: 'as yet unclassified' stamp: 'NG 12/2/2014 22:55'!test02UnMotherNoEsDeUnaCiertaMarca	self deny: (mother esDeMarca: 'Asus')! !